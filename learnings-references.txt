References/ Resources / Learnings :
-----------------------------

#################################################################
asyncio :
- https://medium.com/@moraneus/mastering-pythons-asyncio-a-practical-guide-0a673265cf04
multithreading vs multiprocessing :
- https://youtu.be/AZnGRKFUU0c?feature=shared

#################################################################
RAG 

- https://www.youtube.com/watch?v=sVcwVQRHIc8&t=1700s
- https://huggingface.co/papers/2410.12837
transfer learning 
- https://www.youtube.com/watch?v=WWcgHjuKVqA


#################################################################

What are stop-words
- https://kavita-ganesan.com/what-are-stop-words/

An Intro to Word Embeddings 
- https://sainivedh.medium.com/an-intro-to-word-embeddings-e0a7a46942a8


Tokenization, Stemming and Lemmatization 
- https://youtu.be/JpxCt3kvbLk?feature=shared
Bag of words
- https://youtu.be/IKgBLTeQQL8?feature=shared
Understanding TF-IDF
- https://www.youtube.com/watch?v=D2V1okCEsiE

Glove & Embeddings
- https://jonathan-hui.medium.com/nlp-word-embedding-glove-5e7f523999f6


RAG :
- research paper - https://proceedings.neurips.cc/paper/2020/hash/6b493230205f780e1bc26945df7481e5-Abstract.html
    what I read - 
1. [RAG beats seq2seq] language generation tasks, we find that RAG models generate more specific, 
    diverse and factual language than a state-of-the-art parametric-only seq2seq baseline
2. [hallucinations] Pretrained Neural language models are good : 
    but, They cannot easily expand or revise their memory, can’t straightforwardly 
    provide insight into their predictions, and may produce “hallucinations”.
3. [Hybrid models] that combine parametric memory with non-parametric (i.e., retrieval-based)
 memories [20, 26, 48] can address some of these issues because knowledge can be directly revised
  and expanded, and accessed knowledge can be inspected and interpreted. REALM [20] and ORQA [31],
   two recently introduced models that combine masked language models [8] with a differentiable
    retriever, have shown promising results,


Encapsula/on
• An encapsulated object can be thought of as
a black box -- its inner workings are hidden from the client
• The client invokes the interface methods of
the object, which manages the instance data

• Composition -- A “contains” B
• Association -- A “knows-about” B
• Dependency --- A “depends on” B    i.e. doesn't know, doesn't contain
• Inheritance -- HarleyDavidson “is-a” Bike


2xx: Success
200 OK:
The request was successful, and the server has returned the requested data. 
201 Created:
The request has been fulfilled, and a new resource has been created. 
202 Accepted:
The server has accepted the request for processing, but the processing hasn't been completed yet. 
204 No Content:
The server has successfully processed the request, but there's no content to return. 
206 Partial Content
The server has successfully processed a request for a portion of a resource 
3xx: Redirection
301 Moved Permanently: The requested resource has been permanently moved to a new location.
302 Found: The requested resource is temporarily located at a different URI.
304 Not Modified: The client's cached version of the resource is still valid, so the server doesn't need to send the resource again. 
4xx: Client Errors
400 Bad Request: The server cannot process the request due to a client error.
401 Unauthorized: The client needs to authenticate to access the resource.
403 Forbidden: The client is not authorized to access the resource.
404 Not Found: The server cannot find the requested resource. 
5xx: Server Errors
500 Internal Server Error: The server encountered an unexpected condition that prevented it from fulfilling the request.
503 Service Unavailable: The server is currently unavailable